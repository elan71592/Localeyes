<h2><%= @trip.name %></h2>
<p>Add the next location to <%=@trip.name%> by typing in the search bar</p>

<input id="pac-input" class="controls" type="text"
     placeholder="Enter a location">
 </div>
 <div id="map"></div>

 <div class="finish-trip-message">
  <p>Add at least <span class="location-number">3</span> location(s) to continue!</p>
</div>

<div class="finish-trip-button" style="display:none">
  <a href='/trips/<%=@trip.id%>' class='waves-effect waves-light btn create-trip-button'>create your trip</a>
</div>

<div class="row">
  <div class="col s6">
    <div id="new-location">
      <h2>Add a new location</h2>
    </div>
  </div>
  <div class="col s6">
    <div id="saved-location-holder">
      <h2>Saved locations</h2>
    </div>
  </div>
</div>

<script>
  function initMap() {
    var map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 40.712784, lng: -74.005941},
      zoom: 13,
    });
    var input = /** @type {!HTMLInputElement} */(
        document.getElementById('pac-input'));

    var types = document.getElementById('type-selector');
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

    var autocomplete = new google.maps.places.Autocomplete(input);
    autocomplete.bindTo('bounds', map);

    var infowindow = new google.maps.InfoWindow();
    var service = new google.maps.places.PlacesService(map);
    var marker = new google.maps.Marker({
      map: map,
      anchorPoint: new google.maps.Point(0, -29)
    });

    autocomplete.addListener('place_changed', function() {
      infowindow.close();
      marker.setVisible(false);
      var place = autocomplete.getPlace();
      if (!place.geometry) {
        window.alert("Autocomplete's returned place contains no geometry");
        return;
      }

      // If the place has a geometry, then present it on a map.
      if (place.geometry.viewport) {
        map.fitBounds(place.geometry.viewport);
      } else {
        map.setCenter(place.geometry.location);
        map.setZoom(17);  // Why 17? Because it looks good.
      }
      marker.setIcon(/** @type {google.maps.Icon} */({
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(35, 35)
      }));
      marker.setPosition(place.geometry.location);
      marker.setVisible(true);

      var address = '';
      if (place.address_components) {
        address = [
          (place.address_components[0] && place.address_components[0].short_name || ''),
          (place.address_components[1] && place.address_components[1].short_name || ''),
          (place.address_components[2] && place.address_components[2].short_name || '')
        ].join(' ');
      }

      infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
      infowindow.open(map, marker);
      $.ajax({
        url: "/trips/" + window.location.href.split("/")[4] + "/locations",
        method: 'POST',
        data: {
          "place": {
          "name": place.name,
          "address":place.formatted_address,
          "phone_number":place.formatted_phone_number,
          "website_url": place.website,
          "latitude": place.geometry.location.lat(),
          "longitude": place.geometry.location.lng()
          }
        }
      }).done(function(response){
        $('#new-location').append(response);
      })
    });

    // Sets a listener on a radio button to change the filter type on Places
    // Autocomplete.
    function setupClickListener(id, types) {
      var radioButton = document.getElementById(id);
      radioButton.addEventListener('click', function() {
        lete.setTypes(types);
      });
    }

    setupClickListener('changetype-all', []);
    setupClickListener('changetype-address', ['address']);
    setupClickListener('changetype-establishment', ['establishment']);
    setupClickListener('changetype-geocode', ['geocode']);
  }
</script>
